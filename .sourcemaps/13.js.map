{"version":3,"sources":["../../src/pages/items/share-modal/share-modal.module.ts","../../node_modules/@ionic-native/contacts/index.js","../../src/pages/items/share-modal/share-modal.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACS;AACF;AACa;AAE4B;AACN;AAC/B;AAmBpD;IAAA;IAAyC,CAAC;IAA7B,yBAAyB;QAjBrC,+DAAQ,CAAC;YACT,YAAY,EAAE;gBACb,yEAAmB;aACnB;YACD,OAAO,EAAE;gBACR,uGAAuB;gBACvB,iGAAqB;gBACrB,sEAAe,CAAC,QAAQ,CAAC,yEAAmB,CAAC;aAC7C;YACD,eAAe,EAAE;gBAChB,yEAAmB;aACnB;YACD,SAAS,EAAE;gBACV,wEAAQ;gBACN,mFAAa;aACf;SACD,CAAC;OACW,yBAAyB,CAAI;IAAD,gCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;AC1BtC;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AAC8G;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+CAA+C;AAC1D;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC,uBAAuB,oBAAoB;AAC3C,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,+DAA+D,yCAAyC,EAAE;AAC1G,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,kEAAmB;AACxB;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;;ACjTkD;AACyB;AAChB;AAU3D;IAQE,6BAAoB,QAAkB,EAAU,MAAiB,EAAU,KAAsB,EAAU,IAAoB;QAA3G,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,UAAK,GAAL,KAAK,CAAiB;QAAU,SAA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","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Contacts } from '@ionic-native/contacts';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SocialSharing } from '@ionic-native/social-sharing';\r\n\r\nimport { EbcEmailComponentModule } from '../../../components/ebc-email/ebc-email.module';\r\nimport { EbcSmsComponentModule } from '../../../components/ebc-sms/ebc-sms.module';\r\nimport { ShareModalComponent } from './share-modal';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tShareModalComponent\r\n\t],\r\n\timports: [\r\n\t\tEbcEmailComponentModule,\r\n\t\tEbcSmsComponentModule,\r\n\t\tIonicPageModule.forChild(ShareModalComponent)\r\n\t],\r\n\tentryComponents: [\r\n\t\tShareModalComponent\r\n\t],\r\n\tproviders: [\r\n\t\tContacts,\r\n    SocialSharing\r\n\t]\r\n})\r\nexport class ShareModalComponentModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/items/share-modal/share-modal.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaInstance, InstanceProperty, Plugin, getPromise, InstanceCheck, checkAvailability, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @hidden\n */\nvar Contact = (function () {\n    function Contact() {\n        if (checkAvailability('navigator.contacts', 'create', 'Contacts') === true) {\n            this._objectInstance = navigator.contacts.create();\n        }\n    }\n    Contact.prototype.clone = function () {\n        var newContact = new Contact();\n        for (var prop in this) {\n            if (prop === 'id')\n                return;\n            newContact[prop] = this[prop];\n        }\n        return newContact;\n    };\n    Contact.prototype.remove = function () { return; };\n    Contact.prototype.save = function () {\n        var _this = this;\n        return getPromise(function (resolve, reject) {\n            _this._objectInstance.save(function (contact) {\n                _this._objectInstance = contact;\n                resolve(_this);\n            }, reject);\n        });\n    };\n    return Contact;\n}());\nexport { Contact };\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", String)\n], Contact.prototype, \"id\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", String)\n], Contact.prototype, \"displayName\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Object)\n], Contact.prototype, \"name\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", String)\n], Contact.prototype, \"nickname\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"phoneNumbers\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"emails\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"addresses\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"ims\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"organizations\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Date)\n], Contact.prototype, \"birthday\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", String)\n], Contact.prototype, \"note\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"photos\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"categories\", void 0);\n__decorate([\n    InstanceProperty,\n    __metadata(\"design:type\", Array)\n], Contact.prototype, \"urls\", void 0);\n__decorate([\n    InstanceCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Contact)\n], Contact.prototype, \"clone\", null);\n__decorate([\n    CordovaInstance(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Contact.prototype, \"remove\", null);\n__decorate([\n    InstanceCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Contact.prototype, \"save\", null);\n/**\n * @hidden\n */\nvar ContactName = (function () {\n    function ContactName(formatted, familyName, givenName, middleName, honorificPrefix, honorificSuffix) {\n        this.formatted = formatted;\n        this.familyName = familyName;\n        this.givenName = givenName;\n        this.middleName = middleName;\n        this.honorificPrefix = honorificPrefix;\n        this.honorificSuffix = honorificSuffix;\n    }\n    return ContactName;\n}());\nexport { ContactName };\n/**\n * @hidden\n */\nvar ContactField = (function () {\n    function ContactField(type, value, pref) {\n        this.type = type;\n        this.value = value;\n        this.pref = pref;\n    }\n    return ContactField;\n}());\nexport { ContactField };\n/**\n * @hidden\n */\nvar ContactAddress = (function () {\n    function ContactAddress(pref, type, formatted, streetAddress, locality, region, postalCode, country) {\n        this.pref = pref;\n        this.type = type;\n        this.formatted = formatted;\n        this.streetAddress = streetAddress;\n        this.locality = locality;\n        this.region = region;\n        this.postalCode = postalCode;\n        this.country = country;\n    }\n    return ContactAddress;\n}());\nexport { ContactAddress };\n/**\n * @hidden\n */\nvar ContactOrganization = (function () {\n    function ContactOrganization(type, name, department, title, pref) {\n        this.type = type;\n        this.name = name;\n        this.department = department;\n        this.title = title;\n        this.pref = pref;\n    }\n    return ContactOrganization;\n}());\nexport { ContactOrganization };\n/**\n * @hidden\n */\nvar ContactFindOptions = (function () {\n    function ContactFindOptions(filter, multiple, desiredFields, hasPhoneNumber) {\n        this.filter = filter;\n        this.multiple = multiple;\n        this.desiredFields = desiredFields;\n        this.hasPhoneNumber = hasPhoneNumber;\n    }\n    return ContactFindOptions;\n}());\nexport { ContactFindOptions };\n/**\n * @name Contacts\n * @description\n * Access and manage Contacts on the device.\n *\n * @usage\n *\n * ```typescript\n * import { Contacts, Contact, ContactField, ContactName } from '@ionic-native/contacts';\n *\n * constructor(private contacts: Contacts) { }\n *\n * let contact: Contact = this.contacts.create();\n *\n * contact.name = new ContactName(null, 'Smith', 'John');\n * contact.phoneNumbers = [new ContactField('mobile', '6471234567')];\n * contact.save().then(\n *   () => console.log('Contact saved!', contact),\n *   (error: any) => console.error('Error saving contact.', error)\n * );\n *\n * ```\n * @classes\n * Contact\n * @interfaces\n * IContactProperties\n * IContactError\n * IContactName\n * IContactField\n * IContactAddress\n * IContactOrganization\n * IContactFindOptions\n */\nvar Contacts = (function (_super) {\n    __extends(Contacts, _super);\n    function Contacts() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create a single contact.\n     * @returns {Contact} Returns a Contact object\n     */\n    Contacts.prototype.create = function () {\n        return new Contact();\n    };\n    /**\n     * Search for contacts in the Contacts list.\n     * @param fields {ContactFieldType[]}  Contact fields to be used as a search qualifier\n     * @param options {IContactFindOptions} Optional options for the query\n     * @returns {Promise<Contact[]>} Returns a Promise that resolves with the search results (an array of Contact objects)\n     */\n    Contacts.prototype.find = function (fields, options) {\n        return getPromise(function (resolve, reject) {\n            navigator.contacts.find(fields, function (contacts) {\n                resolve(contacts.map(processContact));\n            }, reject, options);\n        });\n    };\n    /**\n     * Select a single Contact.\n     * @returns {Promise<Contact>} Returns a Promise that resolves with the selected Contact\n     */\n    Contacts.prototype.pickContact = function () {\n        return getPromise(function (resolve, reject) {\n            navigator.contacts.pickContact(function (contact) { return resolve(processContact(contact)); }, reject);\n        });\n    };\n    return Contacts;\n}(IonicNativePlugin));\nContacts.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nContacts.ctorParameters = function () { return []; };\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Array, Object]),\n    __metadata(\"design:returntype\", Promise)\n], Contacts.prototype, \"find\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Contacts.prototype, \"pickContact\", null);\nContacts = __decorate([\n    Plugin({\n        pluginName: 'Contacts',\n        plugin: 'cordova-plugin-contacts',\n        pluginRef: 'navigator.contacts',\n        repo: 'https://github.com/apache/cordova-plugin-contacts',\n        platforms: ['Android', 'BlackBerry 10', 'Firefox OS', 'iOS', 'Ubuntu', 'Windows', 'Windows Phone 8']\n    })\n], Contacts);\nexport { Contacts };\n/**\n * @hidden\n */\nfunction processContact(contact) {\n    var newContact = new Contact();\n    for (var prop in contact) {\n        if (typeof contact[prop] === 'function')\n            continue;\n        newContact[prop] = contact[prop];\n    }\n    return newContact;\n}\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/contacts/index.js\n// module id = 674\n// module chunks = 1 2 3 13 14","import { Component, OnInit } from '@angular/core';\r\nimport { IonicPage, NavParams, ToastController, ViewController } from 'ionic-angular';\r\nimport { Contacts, Contact } from '@ionic-native/contacts';\r\n\r\nimport { BackandItem } from '../../../providers';\r\nimport { ShareInput } from '../../../providers/myservices';\r\n\r\n@IonicPage({\r\n  name: 'share'\r\n})\r\n@Component({\r\n  selector: 'share-modal',\r\n  templateUrl: 'share-modal.html'\r\n})\r\nexport class ShareModalComponent implements OnInit {\r\n  ebcUrl: string = 'https://ebc.beezleeart.com/card/';\r\n  emailShare: ShareInput;\r\n  hide: boolean = false;\r\n  item: BackandItem;\r\n  smsShare: ShareInput;\r\n  type: string;\r\n\r\n  constructor(private contacts: Contacts, private params: NavParams, private toast: ToastController, private view: ViewController) { }\r\n\r\n  ngOnInit() {\r\n    this.getItem();\r\n    this.setEmail();\r\n    this.setMessage();\r\n  }\r\n\r\n  close() {\r\n    this.view.dismiss();\r\n  }\r\n\r\n  getContact() {\r\n    this.contacts.pickContact().then((contact) => {\r\n      this.setEmail(contact);\r\n      this.setMessage(contact);\r\n      this.hide = true;\r\n    });\r\n  }\r\n\r\n  getItem() {\r\n    this.item = this.params.data;\r\n\r\n    if (this.item.flyer) {\r\n      this.type = 'Flyer';\r\n    } else {\r\n      this.type = 'Card';\r\n    }\r\n\r\n    this.setText();\r\n  }\r\n\r\n  sentMsg(type: string) {\r\n    let isSent = this.toast.create({\r\n      message: `Your ${type} as been Sent`,\r\n      position: 'top',\r\n      duration: 5000\r\n    });\r\n\r\n    isSent.present();\r\n  }\r\n\r\n  setEmail(contact?: Contact) {\r\n    this.emailShare = {\r\n      ebcUrl: `${this.ebcUrl}${this.item['id']}`,\r\n      hide: false,\r\n      messText: this.setText(),\r\n      disabled: this.item.disable\r\n    }\r\n     if (contact) {\r\n      this.emailShare.contacts = contact.emails;\r\n      this.emailShare.hide = true;\r\n      this.emailShare.name = contact.name;\r\n    }\r\n  }\r\n\r\n  setMessage(contact?: Contact) {\r\n    this.smsShare = {\r\n      ebcUrl: `${this.ebcUrl}${this.item['id']}`,\r\n      hide: false,\r\n      messText: this.setText(),\r\n      disabled: this.item.disable\r\n    }\r\n    if (contact) {\r\n      this.smsShare.contacts = contact.phoneNumbers;\r\n      this.smsShare.hide = true;\r\n      this.smsShare.name = contact.name;\r\n    }\r\n  }\r\n\r\n  setText(): string {\r\n    let startText: string = `Check out my interactive EBC ${this.type}, just touch to connect.`;\r\n    return startText;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/items/share-modal/share-modal.ts"],"sourceRoot":""}